;===========================================================================
; 上書きした一部のコモンステート
;===========================================================================
;---------------------------------------------------------------------------
;通常立ち・改
[Statedef 0]
type = S
physics = S
sprpriority = 0

[State 0, アニメ変更]
type = ChangeAnim
trigger1 = (Anim != 0) && (Anim != 5)
trigger2 = (Anim = 5) && (AnimTime = 0)
value = 0

[State 0, 移動速度]
type = VelSet
trigger1 = Time = 0
y = 0

[State 0, 移動速度]
type = VelSet
trigger1 = (abs(Vel X) < 2) ;absは『Absolute（絶対値）』
trigger2 = Time = 4
trigger3 = (PrevStateNo = 20) && (Time = 0)
x = 0

[State 0, ステート変更]
type = ChangeState
trigger1 = (!Alive)
value = 5050

[State 0, ヘルパーを消す];ヘルパー分身バグ対策
type = DestroySelf
trigger1 = (IsHelper) ;このプレイヤーが「ヘルパーオブジェクト」だったら

;---------------------------------------------------------------------------
; Walk
[Statedef 20]
type    = S
physics = S
sprpriority = 0

[State 20]
type = playsnd
;trigger1 = time%36 = 0
trigger1 = anim = 20
trigger1 = (animElem = 5)||(animElem = 10)
trigger2 = anim = 21
trigger2 = ((time>5)&&(animElemTime(1) = 1))||(animElem = 6)
value = s0,29

[State 20, 1]
type = VelSet
trigger1 = command = "holdfwd"
x = const(velocity.walk.fwd.x)

[State 20, 2]
type = VelSet
trigger1 = command = "holdback"
x = const(velocity.walk.back.x)

[State 20, 3]
type = ChangeAnim
triggerall = vel x > 0
trigger1 = Anim != 20 && Anim != 5
trigger2 = Anim = 5 && AnimTime = 0
value = 20

[State 20, 4]
type = ChangeAnim
triggerall = vel x < 0
trigger1 = Anim != 21 && Anim != 5
trigger2 = Anim = 5 && AnimTime = 0
value = 21

; ＡＩ専用の前進(commonの前進&後退はstaeteNo=20)
[Statedef 21]
type    = S
physics = S
anim = 20
sprpriority = 0

[State 21]
type = playsnd
trigger1 = anim = 20
trigger1 = (animElem = 5)||(animElem = 10)
value = s0,29

[State 21, 特殊効果]
type = AssertSpecial
trigger1 = 1
flag = NoWalk      ;歩かない（前か後ろのキーを入力中コントロールが可能の時に勝手に[Statedef 20]にならない）
;flag2= NoAutoTurn  ;自動で振り向かない

[State 21, 1]
type = VelSet
;trigger1 = command = "holdfwd"
trigger1 = 1
x = const(velocity.walk.fwd.x)

;[State 21, 2]
;type = VelSet
;trigger1 = command = "holdback"
;x = const(velocity.walk.back.x)

[State 21, 3]
type = ChangeAnim
triggerall = vel x > 0
trigger1 = Anim != 20 && Anim != 5
trigger2 = Anim = 5 && AnimTime = 0
value = 20

[State 21, 4]
type = ChangeAnim
triggerall = vel x < 0
trigger1 = Anim != 21 && Anim != 5
trigger2 = Anim = 5 && AnimTime = 0
value = 21

[State 21, ステート変更]
type = ChangeState
triggerall = (Anim = 20)
trigger1 = (P2BodyDist X < 25)
trigger2 = (InGuardDist)
trigger3 = Enemy,NumProj != 0
value = 0
ctrl = 1

; ＡＩ専用の後退(commonの前進&後退はstaeteNo=20)
[Statedef 22]
type    = S
physics = S
anim = 21
sprpriority = 0

[State 22]
type = playsnd
trigger1 = anim = 21
trigger1 = (animElem = 5)||(animElem = 10)
value = s0,29

[State 22, 特殊効果]
type = AssertSpecial
trigger1 = 1
flag = NoWalk      ;歩かない（前か後ろのキーを入力中コントロールが可能の時に勝手に[Statedef 20]にならない）
;flag2= NoAutoTurn  ;自動で振り向かない

[State 22, 2]
type = VelSet
;trigger1 = command = "holdback"
trigger1 = 1
x = const(velocity.walk.back.x)

[State 22, 3]
type = ChangeAnim
triggerall = vel x > 0
trigger1 = Anim != 20 && Anim != 5
trigger2 = Anim = 5 && AnimTime = 0
value = 20

[State 22, 4]
type = ChangeAnim
triggerall = vel x < 0
trigger1 = Anim != 21 && Anim != 5
trigger2 = Anim = 5 && AnimTime = 0
value = 21

[State 22, ステート変更]
type = ChangeState
triggerall = (Anim = 21)
trigger1 = (P2BodyDist X > 100)
trigger2 = (InGuardDist)
trigger3 = Enemy,NumProj != 0
trigger4 = BackEdgeBodyDist = 0
trigger5 = time > 50
value = 0
ctrl = 1
;---------------------------------------------------------------------------

;---------------------------------------------------------------------------
;ジャンプ開始・改
[Statedef 40]
type    = S
physics = S
anim = 40
ctrl = 0
sprpriority = 1

[State 40, 変数];※システム用
type = VarSet
trigger1 = Time = 0
sysvar(1) = 0

[State 40, 変数];※システム用
type = VarSet
trigger1 = (command = "holdfwd")
sysvar(1) = 1

[State 40, 変数];※システム用
type = VarSet
trigger1 = (command = "holdback")
sysvar(1) = -1

[State 40, 移動速度]
type = VelSet
trigger1 = AnimTime = 0
x = ifelse(sysvar(1)=0, const(velocity.jump.neu.x), ifelse(sysvar(1)=1, const(velocity.jump.fwd.x), const(velocity.jump.back.x)))
y = const(velocity.jump.y)

[State 40, 移動速度]
type = VelSet
trigger1 = (AnimTime = 0)
trigger1 = (PrevStateNo = 100)
trigger1 = (sysvar(1) = 1)
x = const(velocity.runjump.fwd.x)

[State 40, 振り返る]
type = Turn
triggerall = (PrevStateNo = 52)
trigger1 = (Time = 0) && (P2Dist X < 0)
Persistent = 0

[State 40, 音を鳴らす]
type = PlaySnd
trigger1 = Time = 0
value = 0,17

[State 40, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 50
ctrl = 1


;---------------------------------------------------------------------------
;空中下降・改
[Statedef 51]
type     = A
movetype = I
physics  = A
ctrl     = 1
poweradd = 0

[State 51, アニメ変更]
type = ChangeAnim
trigger1 = (PrevStateNo = [700,701]) && (Time = 0)
trigger2 = (PrevStateNo = 800) && (Time = 0)
value = 41
elem = 5
Persistent = 0

;---------------------------------------------------------------------------
; 着地ステートでは必ず「Ｙ軸方向の軸位置を０」に、かつ「Ｙ軸の速度も０」に
; リセットする事。そうしないと地面にめり込むか、画面下へ消えてしまう（苦笑
;---------------------------------------------------------------------------
;着地・改
[Statedef 52]
type    = S
physics = S
ctrl = 0
anim = 47

[State 52, 軸位置];地面に軸をリセットする
type = PosSet
trigger1 = 1
y = 0

[State 52, 移動速度];速度をリセットしている
type = VelSet
trigger1 = 1
x = 0
y = 0

;***********************************
;特殊状況
[State 52]
type = ChangeAnim
triggerall = (Time = 0)
trigger1 = prevStateNo=1000
trigger2 = prevStateNo=3000
trigger3 = prevStateNo=3001
trigger4 = prevStateNo=3100
value = 48

;特殊状況
[State 52]
type = ChangeAnim
triggerall = (Time = 0)
trigger1 = prevStateNo=3100
value = 49

;***********************************

[State 52, コントロール]
type = CtrlSet
triggerall = anim != 48
triggerall = (PrevStateNo = [600,699])
trigger1 = (Time > 0)
value = 1

[State 52, 振り返る]
type = Turn
trigger1 = (AnimTime = 0) && (P2Dist X < 0)
trigger2 = (AnimElemTime(1) = 0) && (P2Dist X < 0)

;[State 52, エフェクト]
;type = Explod
;trigger1 = Time = 0
;anim = 4020
;postype = p1
;pos = 0,0
;scale = 0.5,0.5
;sprpriority = -1
;ownpal = 1
;ID = 4020

[State 52, 音を鳴らす]
type = PlaySnd
trigger1 = Time = 0
value = 0,19

[State 52, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;===========================================================================
;---------------------------------------------------------------------------
;走る・改（フロントステップ）
[Statedef 100]
type     = S
movetype = I
physics  = S
anim     = 100
ctrl     = 1
sprpriority = 1

[State 200, 音を鳴らす]
type = PlaySnd
trigger1 = Time = 3
trigger2 = Time = 7
value = 0,29

[State 100, 特殊効果];コントロールが可能なダッシュステートはこのコントローラが必要（※１）
type = AssertSpecial
trigger1 = 1
flag = NoWalk      ;歩かない（前か後ろのキーを入力中コントロールが可能の時に勝手に[Statedef 20]にならない）
flag2= NoAutoTurn  ;自動で振り向かない

[State 100, 物理的なキャラの幅]
type = Width
trigger1 = (AnimElemTime(3) >= 0) && (AnimElemTime(4) < 0)
value = 15,0 

[State 100, 埃]
type = MakeDust
trigger1 = AnimElemTime(3) = 0
pos = 0,0
spacing = 1
Persistent = 0

[State 100, 埃]
type = MakeDust
trigger1 = AnimElemTime(7) = 0
pos = 20,0
spacing = 1
Persistent = 0

[State 100, 軸位置]
type = PosAdd
triggerall = (Anim = 100)
trigger1 = AnimElem = 4
x = 33

[State 100, 軸位置]
type = PosSet
trigger1 = 1
y = 0

[State 100, 移動速度]
type = VelSet
trigger1 = 1
y = 0

[State 100, 移動速度]
type = VelSet
triggerall = (Anim = 100)
trigger1 = AnimElem = 3
x = const(velocity.run.fwd.x)

[State 100, ステート変更]
type = ChangeState
triggerall = (Anim = 47)
trigger1 = AnimTime = 0
value = 0
ctrl = 1

[State 100, ステート変更]
type = ChangeState
triggerall = (Anim = 100)
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; ※１：AssertSpecial
;
; 　他のコントローラでは設定出来ない『特殊な効果』を指定する命令。
; 　設定したトリガーが有効になってる間だけ一時的に適用される。
;
; 　適用出来るパラメータはこのコントローラを一つ設置する場合、最大３つまで。
; 　書式としては「flag」「flag2」「flag3」を順に加えていく形。
; 　flag2とflag3はオプション。ではその特殊効果を全て紹介。
;
; 　Intro          = イントロ（試合開始前の登場演出アクション）の状態になる。イントロステート専用。
; 　Invisible      = 自分の姿を消す。しかし残像（AfterImage）は消せない。
; 　RoundNotOver   = 現在のラウンドを過ぎない。勝利ポーズ専用。
; 　NoBarDisplay   = ライフバーを非表示にする。
; 　NoBG           = ステージの奥の画像を非表示にし、「真っ黒の背景」にする。
; 　NoFG           = ステージの手前の画像を非表示にする。
; 　NoStandGuard   = 立ちガードが出来なくなる。
; 　NoCrouchGuard  = しゃがみガードが出来なくなる。
; 　NoAirGuard     = 空中ガードが出来なくなる。
; 　NoAutoTurn     = 自動で振り向かない。
; 　NoJuggleCheck  = ジャグルをチェックしない。（ジャグルポイントが減らなくなる）
; 　NoKOSnd        = ＫＯ時の音声（11,0）を鳴らさないようにする。画面中に存在する全員に有効なので注意。
; 　NoKOSlow       = ＫＯ時のスローモーションを無効にする。（ＫＯ直前に有効にしないといけない）
; 　NoShadow       = 自分の影を消す。
; 　GlobalNoShadow = 画面中に存在する全てのプレイヤー（ヘルパーとProjectileも含む）の影を消す。
; 　NoMusic        = 演奏しているＢＧＭを止める。（プラグインによってはＢＧＭがバグるので要注意）
; 　NoWalk         = 歩かない。（前か後ろのキーを入力中コントロールが可能の時に勝手に[Statedef 20]にならない）
; 　TimerFreeze    = タイムカウント（制限時間）を停止する。
; 　UnGuardable    = 自分の全ての攻撃が『ガード不可』になる。
;
;---------------------------------------------------------------------------
;空中ダッシュ（※このステートはコモンにはありません）
[Statedef 101]
type     = A
movetype = I
physics  = N
anim     = 101
ctrl     = 1
velset   = 4,-1.5
sprpriority = 1

[State 101, 残像]
type = AfterImage
trigger1 = Time = 0
Time = 18
PalContrast = 120,120,120
Trans = Add1
TimeGap  = 4
FrameGap = 1
length = 3

[State 101, 速度加算]
type = VelAdd
trigger1 = Time = [1,8]
x = 0.05

[State 101, 速度加算]
type = VelAdd
trigger1 = (Time >= 12)
y = 0.45

[State 101, エフェクト]
type = Explod
trigger1 = Time = 1
anim = 4025
postype = p1
pos = -10,-55
scale = 0.5,0.5
sprpriority = 2
ownpal = 1
ID = 4025

[State 101, 音を鳴らす]
type = PlaySnd
trigger1 = Time = 1
value = 0,22

[State 101, ステート変更]
type = ChangeState
trigger1 = (Time > 1) && (Pos Y >= 0)
value = 52

;---------------------------------------------------------------------------
;---------------------------------------------------------------------------
;バックステップ・改
[Statedef 105]
type     = A
movetype = I
physics  = A
anim     = 105
ctrl     = 0
sprpriority = 1

[State 105, 移動速度]
type = VelSet
trigger1 = Time = 0
x = const(velocity.run.back.x)
y = const(velocity.run.back.y)

[State 105, 埃]
type = MakeDust
trigger1 = Time = 1
pos = 0,0
spacing = 1

;[State 105, 音を鳴らす]
;type = PlaySnd
;trigger1 = Time = 1
;value = 0,17

[State 105, 音を鳴らす]
type = PlaySnd
trigger1 = Time = 1
value = 0,29

[State 105, ステート変更]
type = ChangeState
trigger1 = (Time > 0) && (Pos Y >= 0)
value = 52

;---------------------------------------------------------------------------
;空中バックダッシュ（コモンのバックステップ後の着地を改変）
[Statedef 106]
type     = A
movetype = I
physics  = N
anim     = 106
ctrl     = 1
velset   = -4,-1.5
sprpriority = 1

[State 106, 残像]
type = AfterImage
trigger1 = Time = 0
Time = 18
PalContrast = 120,120,120
Trans = Add1
TimeGap  = 4
FrameGap = 1
length = 3

[State 106, 速度加算]
type = VelAdd
trigger1 = Time = [1,8]
x = -0.05

[State 106, 速度加算]
type = VelAdd
trigger1 = (Time >= 12)
y = 0.45

[State 106, エフェクト]
type = Explod
trigger1 = Time = 1
anim = 4025
postype = p1
facing = -1
pos = 10,-55
scale = 0.5,0.5
sprpriority = 2
ownpal = 1
ID = 4025

[State 106, 音を鳴らす]
type = PlaySnd
trigger1 = Time = 1
value = 0,22

[State 106, ステート変更]
type = ChangeState
trigger1 = (Time > 1) && (Pos Y >= 0)
value = 52


;---------------------------------------------------------------------------
; タイムオーバーで負けた時
[Statedef 170]
type = S
ctrl = 0
anim = 170
velset = 0,0

[State 170]
type = ChangeAnim2
trigger1 = AnimTime = 0
value = 171

[State 170]
type = AssertSpecial
trigger1 = Time < 250
flag = roundnotover

;デフォルトキャラエンディング用
[State 170,gameover]
type = playsnd
triggerall = (!NumEnemy)
trigger1 = time = 0
value = 1,300

[State 170, 1]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1

;---------------------------------------------------------------------------
;勝利ポーズ分岐（common1.cnsには無いけど、これもコモンステート）
[Statedef 180]
type = S
ctrl = 0

;ストーリーボードを登録してない場合のキャラのエンディングは
;「Congratulations!」の文字が表示され勝利ポーズを取るものが
;デフォルトになります。

[State 180, ステート変更];デフォルトキャラエンディング用に追加したもの
type = ChangeState
triggerall = (!NumEnemy)
trigger1 = 1
value = 181

[State 180, ファンファーレ]
type = PlaySnd
triggerall = MatchOver
triggerall = (helper(12345),var(6)=1)
trigger1 = time = 0
value = 1,301

;***********************************
[State 180, ステート変更]
type = ChangeState
triggerall = (NumEnemy)
trigger1 = var(28) = [1,40]
value = 181

[State 180, ステート変更]
type = ChangeState
triggerall = (NumEnemy)
trigger1 = var(28) = [41,80]
value = 182

[State 180, ステート変更]
type = ChangeState
triggerall = (NumEnemy)
trigger1 = var(28) = [81,120]
value = 183

;---------------------------------------------------------------------------
;勝利ポーズ１
[Statedef 181]
type = S
ctrl = 0
anim = 180
velset = 0,0
sprpriority = 2

;デフォルトキャラエンディング用
[State 180, ファンファーレ]
type = PlaySnd
triggerall = (!NumEnemy)
trigger1 = time = 0
value = 1,301

[State 181, 特殊効果];これが有効な間は次のラウンドへは進まない
type = AssertSpecial
trigger1 = Time = [0,220]
flag = RoundNotOver ;現在のラウンドを過ぎない

[State 182, 音を鳴らす]
type = PlaySnd
triggerall = (Anim = 180)
trigger1 = animElem = 7
value = 1,204

;---------------------------------------------------------------------------
;勝利ポーズ２（ガッツポーズ）
[Statedef 182]
type = S
ctrl = 0
anim = 181
velset = 0,-10
sprpriority = 2

[State 182, 移動速度]
type = Veladd
triggerall = (Anim = 181)
trigger1 = 1
y = 0.6

[State 182, 特殊効果]
type = AssertSpecial
trigger1 = Time = [0,260]
flag = RoundNotOver

[State 182, 音を鳴らす]
type = PlaySnd
trigger1 = Time = 0
value = 0,17
Persistent = 0

[State 182, 移動速度]
type = VelSet
triggerall = (Anim = 182)
trigger1 = 1
x = 0
y = 0

[State 182, 移動速度]
type = posSet
triggerall = (Anim = 182)
trigger1 = 1
y = 0

[State 182, アニメ変更]
type = ChangeAnim
trigger1 = (Time > 0) && (Pos Y >= 0)
value = 182
Persistent = 0

[State 182, 音を鳴らす]
type = PlaySnd
triggerall = (Anim = 182)
trigger1 = animElem = 9
value = 1,204

[State 182, 音を鳴らす]
type = PlaySnd
triggerall = (Anim = 182)
trigger1 = animElem = 1
value = 0,19
Persistent = 0

;---------------------------------------------------------------------------
;勝利ポーズ3パタパタ
[Statedef 183]
type = S
ctrl = 0
anim = 183
velset = 0,0
sprpriority = 2

[State 181, 特殊効果];これが有効な間は次のラウンドへは進まない
type = AssertSpecial
trigger1 = Time = [0,220]
flag = RoundNotOver ;現在のラウンドを過ぎない

[State 182, 音を鳴らす]
type = PlaySnd
trigger1 = animElem = 3
value = 1,204

;===========================================================================
;---------------------------------------------------------------------------
;イントロ分岐・改
[Statedef 190]
type = S
ctrl = 0

;「Name」はdefファイルで設定した『キャラの名前（Name）』を、
;「AuthorName」は同じくdefファイルで設定した『キャラの作成者（Author）』を判断。

[State 190, ステート変更]
type = ChangeState
;trigger1 = !(EnemyNear,AuthorName = "Elecbyte") && (EnemyNear,Name != "Kung Fu Man")
;trigger2 = !(EnemyNear,AuthorName = "Elecbyte") && (EnemyNear,Name = "Kung Fu Man")
trigger1 = var(28) = [1,30]
value = 191

[State 190, ステート変更];固有の相手を特定する手段
type = ChangeState
trigger1 = var(28) = [31,60]
value = 193

[State 190, ステート変更];固有の相手を特定する手段
type = ChangeState
trigger1 = var(28) = [61,90]
value = 195

[State 190, ステート変更];固有の相手を特定する手段
type = ChangeState
trigger1 = var(28) = [91,120]
value = 196
;---------------------------------------------------------------------------
;イントロ（飛び降り）
[Statedef 191]
type = S
ctrl = 0
anim = 190
velset = 0,0
sprpriority = 2

[State 191, 特殊効果];試合が開始するまではこのコントローラを使おう
type = AssertSpecial
trigger1 = 1
flag = Intro ;イントロの状態

[State 191, ステート変更]
type = ChangeState
trigger1 = (Time > 115)
value = 0

[State 191, ヘルパーを出す];（※２）
type = Helper
trigger1 = Time = 35
name = "Kick"
stateno = 192
pos = 0,-300
postype = p1
keyctrl = 0
ownpal = 0
size.xscale = const(size.xscale) ;『const(***)』はコンスタンツファイルの各パラメータを使う命令
size.yscale = const(size.yscale)
ID = 192
Persistent = 0

[State 191, エフェクト]
type = Explod
trigger1 = Time = 81
anim = 4020
postype = p1
pos = 0,0
scale = 0.5,0.5
sprpriority = -2
ownpal = 1
ID = 4020

;****************************** 飛ぶ
[Statedef 192]
type     = A
movetype = I
physics  = N
anim     = 191
ctrl     = 0
velset   = 0,1
sprpriority = -1

[State 192, スクロール]
type = ScreenBound
trigger1 = 1
value = 0
MoveCamera = 0,0

[State 192, 速度加算]
type = VelAdd
trigger1 = (Time > 0)
y = 0.25

[State 191, 音を鳴らす]
type = PlaySnd
trigger1 = (Time > 0) && (Pos Y >= 0)
value = 0,19

[State 192, ヘルパーを消す]
type = DestroySelf
trigger1 = (Time > 0) && (Pos Y >= 0)

;---------------------------------------------------------------------------
;イントロ_歩き
[Statedef 193]
type = S
ctrl = 0
anim = 20000
velset = 0,0
sprpriority = 2

[State 193, 特殊効果]
type = AssertSpecial
trigger1 = 1
flag = Intro

[State 193, ステート変更]
type = ChangeState
trigger1 = (Time >= 60)
:trigger1 = numhelper(194) = 0
value = 0

[State 193, ヘルパーを出す];（※２）
type = Helper
trigger1 = Time = 0
name = "walk"
stateno = 194
pos = -180,0
postype = p1
keyctrl = 0
ownpal = 0
size.xscale = const(size.xscale)
size.yscale = const(size.yscale)
ID = 194
Persistent = 0

[Statedef 194];歩き_ヘルパー
type     = S
movetype = I
physics  = N
anim     = 192
ctrl     = 0
velset   = 3,0
sprpriority = 2

[State 194]
type = playsnd
trigger1 = (animElem = 5)||(animElem = 10)
value = s0,29

[State 194, 無敵]
type = NotHitBy
trigger1 = 1
value = SCA
time = 2

[State 194, ヘルパーを消す]
type = DestroySelf
;trigger1 = (RootDist X <= 0)
trigger1 = time >= 60

;---------------------------------------------------------------------------
[Statedef 195];髪いじり
type     = S
movetype = I
physics  = N
anim     = 193
ctrl     = 0
velset   = 0,0
sprpriority = 2

[State 194]
type = playsnd
trigger1 = animElemTime(22) = 0
value = s0,29

[State 194, 無敵]
type = NotHitBy
trigger1 = 1
value = SCA
time = 2

[State 194, ステート変更]
type = ChangeState
trigger1 = anim = 193
trigger1 = animtime = 0
value = 0

;---------------------------------------------------------------------------
;屈伸
[Statedef 196]
type     = C
movetype = I
physics  = N
anim     = 194
ctrl     = 0
velset   = 0,0
sprpriority = 2

[State 194, 特殊効果]
type = AssertSpecial
trigger1 = anim != 47
flag = Intro

[State 194, 音を鳴らす]
type = PlaySnd
trigger1 = Time = 33
trigger2 = Time = 99
value = 1,204

[State 196, 無敵]
type = NotHitBy
trigger1 = 1
value = SCA
time = 2

[State 196]
type = ChangeAnim
trigger1 = anim = 194
trigger1 = animtime = 0
value = 181

[State 197, 音を鳴らす]
type = PlaySnd
trigger1 = anim = 181
trigger1 = animElem = 1
value = 0,17
Persistent = 0

[State 197, 音を鳴らす]
type = PlaySnd
trigger1 = anim = 181
trigger1 = (animElemTime(2) >= 0) && (Pos Y >= 0)
value = 0,19
Persistent = 0

[state 197]
type = velSet
trigger1 = anim = 181
trigger1 = animElem = 1
y = -9

[State 197, 移動速度]
type = Veladd
trigger1 = anim = 181
y = 0.66

[State 197, 移動速度]
type = VelSet
trigger1 = anim = 181
trigger1 = (animElemTime(2) >= 0) && (Pos Y >= 0)
y = 0

[State 197]
type = posSet
trigger1 = anim = 181
trigger1 = (animElemTime(2) >= 0) && (Pos Y >= 0)
y = 0

[State 196]
type = ChangeAnim
trigger1 = anim = 181
trigger1 = (animElemTime(2) >= 0) && (Pos Y >= 0)
value = 47

[State 196, ステート変更]
type = ChangeState
trigger1 = anim = 47
trigger1 = (animTime = 0)
value = 0

;---------------------------------------------------------------------------
; ※２：ヘルパーオブジェクト（Helper）
;
; 　ここでは他のファイルで散々スルーしてきた『ヘルパー』について説明する（爆
; 　良い解説スペースがここしか無かったんだよ！｡ﾟ(ﾟつД`ﾟ)ﾟ｡
;
; 　その名の通り本来は『支援キャラクター』を呼び出すコントローラ。
; 　多目的にオブジェクトを画面中に出現させる事が出来る。
;
;　「ヘルパー専用のステートを作る」「用途によっては目的を済ませたら消す」の
; 　二点さえ気を付ければ、後は支援キャラ・エフェクトなどを自由に作れる。
; 　kfmcでもHelper.cnsでヘルパー用のステートをまとめているので、
; 　必ず参考にしてね。
;
; 　で、肝心なHelper用パラメータの説明を。
;
;
; [State 1000, ヘルパーを出す]
; type = Helper
; trigger1 = Time = 0
;
; helpertype = normal    ;ヘルパーの属性。「Normal」ならば画面スクロールの影響を受けず、画面外に出られる。
;                        「Player」なら画面スクロールの影響を受け、画面外に出られない上に、
;                         ヘルパー自体も「プレイヤー」として相手に判断される。
;                         デフォルトはNormal。
;
; name = "Yaranaika"     ;ヘルパーの名前。省略すれば勝手に「(ヘルパーを出した親)'s Helper」という名前になる。
;
; stateno = 12345        ;ヘルパーの最初に向かうステートナンバー。
;
; pos = 0,0              ;ヘルパーの座標（Ｘ軸,Ｙ軸）
;                         postypeに依存。
;
; postype = p1           ;ヘルパーの位置属性（p1・p2・front・back・left・right）
;                         効果については「小ネタ.txt」を参照（PosTypeの違い）
;
; facing = 1             ;ヘルパーの左右の向き（1=そのまま・-1=左右反転）
;                         デフォルトは１。
;
; keyctrl = 0            ;ヘルパーのキーコントロールを可能にするか否か（0=しない・1=する）
;                         1の場合、[Statedef -1]に登録されたステートコントローラを
;                         そのヘルパーにも適用する事が出来る。デフォルトは０。
;
; ownpal = 1             ;ヘルパーの色を独立させるか否か（0=させない,1=させる）
;                         0にすればキャラ本体が「PalFX」などで色を変化させた場合、
;                         ヘルパーオブジェクトも一緒に色が変わってしまう。
;
; supermovetime = 6      ;「SuperPause」での時間停止を無視して有効にする時間を設定。
;                         「小ネタ.txt」を参照。
;
; pausemovetime = 6      ;「Pause」での時間停止を無視して有効にする時間を設定。
;                         「小ネタ.txt」を参照。
;
; ID = 54321             ;ヘルパーのＩＤナンバー。
;                         リダイレクションの「Helper(***),***」などでヘルパーの状況を確認する場合や
;                        「NumHelper」でヘルパーの個数を調べる場合など、『ヘルパーを特定する時』に必要。
;
; size.xscale = 1        ;｝
; size.yscale = 1        ;｝
; size.ground.back = 15  ;｝
; size.ground.front = 15 ;｝
; size.air.back = 10     ;｝これらは全てヘルパーへのサイズ指定（オプション）。
; size.air.front = 10    ;｝
; size.height = 60       ;｝やり方はコンスタンツファイルの[Size]の項目と一緒。
; size.proj.doscale = 0  ;｝
; size.head.pos = -5,-90 ;｝
; size.mid.pos = -5,-60  ;｝
; size.shadowoffset = 0  ;｝
;
;---------------------------------------------------------------------------
;---------------------------------------------------------------------------
;---------------------------------------------------------------------------
;---------------------------------------------------------------------------
;---------------------------------------------------------------------------

